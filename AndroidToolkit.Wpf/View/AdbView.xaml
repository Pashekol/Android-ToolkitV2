<metroControls:MetroWindow x:Class="AndroidToolkit.Wpf.View.AdbView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:AndroidToolkit.Wpf.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
        xmlns:metroControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:controls="clr-namespace:AndroidToolkit.Wpf.Presentation.Controls;assembly=AndroidToolkit.Wpf.Presentation"
        xmlns:converters="clr-namespace:AndroidToolkit.Wpf.Presentation.Converters;assembly=AndroidToolkit.Wpf.Presentation"
        Title="Android Toolkit - ADB" Height="600" Width="1100" MinHeight="350" MinWidth="525" ShowMinButton="True" ShowInTaskbar="True" ResizeMode="CanResizeWithGrip" WindowTransitionsEnabled="True" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AndroidToolkit.Wpf.Presentation;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AndroidToolkit.Wpf.Presentation;component/Resources/Text.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AndroidToolkit.Wpf.Presentation;component/Resources/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AndroidToolkit.Wpf.Presentation;component/Resources/CustomButtonStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:SingleCommandParametersConverter x:Key="SingleCommandParametersConverter"/>
            <converters:TwoCommandsParametersConverter x:Key="TwoCommandsParametersConverter"/>
            <converters:ThreeTextCommandParametersConverter x:Key="ThreeTextCommandParametersConverter"/>
            <converters:FiveTextCommandParametersConverter x:Key="FiveTextCommandParametersConverter"/>
            <converters:UIParametersConverter x:Key="UIParametersConverter"/>
            <converters:ExecuteCommandParametersConverter x:Key="ExecuteCommandParametersConverter"/>
            <Storyboard x:Key="OnLoaded">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="OverviewText">
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="20"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.Height)" Storyboard.TargetName="OverviewRectangle">
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="128"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>

    <metroControls:MetroWindow.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard x:Name="OnLoaded_BeginStoryboard" Storyboard="{StaticResource OnLoaded}"/>
        </EventTrigger>
    </metroControls:MetroWindow.Triggers>

    <metroControls:MetroWindow.RightWindowCommands>
        <metroControls:WindowCommands>

            <Button Name="StartAdb">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_refresh}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="start ADB" />
                </StackPanel>
            </Button>
            <Button Name="KillAdb">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_cancel}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="kill adb" />
                </StackPanel>
            </Button>
            <Button Name="ListDevices" Command="{Binding ListDevicesCommand}">
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource UIParametersConverter}">
                        <Binding ElementName="Context"/>
                        <Binding ElementName="ADBDevices"/>
                        <Binding ElementName="Target" Path="Text"/>
                        <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                        <Binding ElementName="ListAppsFlyout"/>
                    </MultiBinding>
                </Button.CommandParameter>
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_iphone}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="list devices" />
                </StackPanel>
            </Button>
            <Button Name="ShowSettings2">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_cog}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="settings" />
                </StackPanel>
            </Button>
            <Button>
                <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_os_android}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </metroControls:WindowCommands>
    </metroControls:MetroWindow.RightWindowCommands>

    <Window.DataContext>
        <local:AdbViewModel/>
    </Window.DataContext>

    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior AllowsTransparency="True" AutoSizeToContent="True" EnableDWMDropShadow="True" />
    </i:Interaction.Behaviors>

    <metroControls:MetroWindow.Flyouts>
        <metroControls:FlyoutsControl>
            <metroControls:Flyout Name="SettingsFlyout" Header="SETTINGS" Position="Right" Theme="Adapt" Width="500" IsModal="True" IsPinned="True">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <Rectangle Width="90" Height="90" Margin="0,0,0,25" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Expander Header="Device settings">
                            <ScrollViewer>
                                <StackPanel>
                                    <metroControls:ToggleSwitch Name="CreateNoWindow" Header="Disable CMD" Margin="20" IsChecked="{Binding Source={StaticResource Settings}, Path=Default.CreateADBWindow}"/>
                                    <TextBox Name="Target" Text="{Binding Source={StaticResource Settings}, Path=Default.ADBTarget}" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.IsWaitingForData="True" metroControls:TextboxHelper.Watermark="TARGET DEVICE ID"></TextBox>
                                </StackPanel>
                            </ScrollViewer>
                        </Expander>
                        <Rectangle Margin="20,5,20,5" Fill="White" Width="{Binding ElementName=SettingsFlyout, Path=Width}" Height="1"/>
                        <Expander Header="UI Settings" Name="UiSettings">
                            <ScrollViewer>
                                <StackPanel>
                                    <metroControls:ToggleSwitch Name="LightTheme" Header="Light Theme" Margin="5" />
                                    <ComboBox Name="AccentsComboBox" ItemsSource="{Binding Accents}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                    <Rectangle Width="20" Height="20" Fill="DarkGray">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}"/>
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                    <Label Margin="10,0,0,0" Style="{StaticResource TileTitleLabel}" Foreground="DarkGray" Content="{Binding Name}"/>
                                                </DockPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <Button Name="ApplyThemeChange" Margin="5" Width="80" Height="80" Style="{DynamicResource MetroCircleButtonStyle}">
                                        <Rectangle Width="20" Height="20" Fill="{DynamicResource AccentColorBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                </StackPanel>
                            </ScrollViewer>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </metroControls:Flyout>
            <metroControls:Flyout Header="REBOOT" Position="Left" Theme="Adapt" Width="250" IsModal="False" IsPinned="True">
                <StackPanel Margin="10">
                    <Rectangle Width="90" Height="90" Margin="0,0,0,25" Fill="{StaticResource FlatButtonBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_reset}"></VisualBrush>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Button Margin="5" Height="50" Name="RebootButton" Command="{Binding RebootCommand}" Style="{StaticResource FlatMetroAccentButton }">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SingleCommandParametersConverter}">
                                <Binding ElementName="Context"/>
                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                <Binding ElementName="Target" Path="Text"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <Button.Content>
                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Rectangle Width="20" Height="20" Fill="White">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_reset}" Stretch="Fill"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="5,0,0,0" Text="REBOOT" Foreground="White" />
                            </DockPanel>
                        </Button.Content>
                    </Button>
                    <Button Margin="5" Height="50" Name="RebootRecoveryButton" Command="{Binding RebootRecoveryCommand}" Style="{StaticResource FlatMetroAccentButton }">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SingleCommandParametersConverter}">
                                <Binding ElementName="Context"/>
                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                <Binding ElementName="Target" Path="Text"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <Button.Content>
                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Rectangle Width="20" Height="20" Fill="White">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_reset}" Stretch="Fill"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="5,0,0,0" Text="REBOOT RECOVERY" Foreground="White" />
                            </DockPanel>
                        </Button.Content>
                    </Button>
                    <Button Margin="5" Height="50" Name="RebootBootloaderButton" Command="{Binding RebootBootloaderCommand}" Style="{StaticResource FlatMetroAccentButton }">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SingleCommandParametersConverter}">
                                <Binding ElementName="Context"/>
                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                <Binding ElementName="Target" Path="Text"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <Button.Content>
                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Rectangle Width="20" Height="20" Fill="White">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_reset}" Stretch="Fill"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="5,0,0,0" Text="REBOOT BOOTLOADER" Foreground="White" />
                            </DockPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </metroControls:Flyout>
            <metroControls:Flyout Name="ListAppsFlyout" Header="APPS" Position="Left" Theme="Adapt" Width="250" IsModal="False" IsPinned="True">
                <StackPanel Margin="10">
                    <Rectangle Width="90" Height="90" Margin="0,0,0,25" Fill="{StaticResource FlatButtonBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_app}"></VisualBrush>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Button Margin="5" Height="50" Name="RefreshApps" Command="{Binding ListAppsCommand}" Style="{StaticResource FlatMetroAccentButton }">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource UIParametersConverter}">
                                <Binding ElementName="Context"/>
                                <Binding ElementName="Packages"/>
                                <Binding ElementName="Target" Path="Text"/>
                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                <Binding ElementName="ListAppsFlyout"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <Button.Content>
                            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Rectangle Width="20" Height="20" Fill="White">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_refresh}" Stretch="Fill"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </DockPanel>
                        </Button.Content>
                    </Button>
                    <TextBox Name="Packages"></TextBox>
                </StackPanel>
            </metroControls:Flyout>
            <metroControls:Flyout Header="DEVICES" Position="Right" Width="500" Theme="Accent" IsPinned="True">
                <ScrollViewer CanContentScroll="True">
                    <StackPanel Margin="20">
                        <Grid>
                            <Rectangle Width="80" Height="128" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_iphone}"></VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Rectangle Width="45" Height="45" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list}"></VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <Label Style="{StaticResource TileTitleLabel}" Foreground="White">ADB</Label>
                        <TextBox Name="ADBDevices" Width="{Binding}" Height="128"/>

                        <!--<Rectangle Width="{Binding}" Fill="White" Height="1" Margin="20,10,20,0"/>-->
                        <!--<Label Style="{StaticResource TileTitleLabel}" Foreground="White">Fastboot</Label>
                        <TextBox Name="FastbootDevices" Width="{Binding}" Height="128"/>-->
                    </StackPanel>
                </ScrollViewer>
            </metroControls:Flyout>
            <metroControls:Flyout Position="Bottom" Header="Working..." Width="{Binding}" Height="90" Theme="Adapt" Background="#9f000000">
                <metroControls:ProgressRing IsActive="True" IsLarge="True" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </metroControls:Flyout>
        </metroControls:FlyoutsControl>
    </metroControls:MetroWindow.Flyouts>

    <metroControls:MetroContentControl>
        <Grid x:Name="LayoutRoot">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.225*"/>
                <RowDefinition Height="0.725*"/>
                <RowDefinition Height="0.04*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.75*"/>
                <ColumnDefinition Width="0.25*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer Grid.Column="0" Grid.Row="0" CanContentScroll="True" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto">
                <controls:Logo Name="Header" Height="{Binding}" Width="{Binding}"/>
            </ScrollViewer>
            <GridSplitter Background="Gray" Grid.Column="0" Grid.Row="1" Width="8"/>

            <TabControl Name="Tools" Grid.Column="0" Grid.Row="1" Margin="20,20,20,0" >
                <TabItem Header="Overview">
                    <ScrollViewer>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.3*"/>
                                <ColumnDefinition Width="0.7*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Name="OverviewRectangle" Fill="Gray" Width="128" Height="2" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Center">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_thumbs_up}"></VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <StackPanel Grid.Column="1">
                                <TextBlock x:Name="OverviewText" Style="{StaticResource TileTitle}" FontSize="1" TextWrapping="Wrap" Text="Android Debug Bridge (adb) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device. &#x0a;Android Toolkit gives you an opportunity to use GUI (graphical user interface) for every device/emulator operation rather than writing commands in command prompt (cmd)." />
                                <Button Margin="0,10,0,0" Width="100" Height="40" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <Button.Content>
                                        <DockPanel>
                                            <Rectangle Fill="Gray" Width="20" Height="20" Margin="0,0,5,0">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_question}"></VisualBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock Foreground="Gray" Text="HELP"/>
                                        </DockPanel>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>

                </TabItem>
                <TabItem Header="Push/Pull">
                    <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.2*"/>
                                <ColumnDefinition Width="0.4*"/>
                                <ColumnDefinition Width="0.4*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Rectangle Margin="5" Width="130" Height="150" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="DarkGray">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_sd}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Rectangle Width="130" Height="150" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="DarkGray">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_cabinet_files}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </StackPanel>

                            <GroupBox Header="push" Grid.Column="1">
                                <StackPanel>
                                    <Button Name="PushChoose" CommandParameter="{Binding ElementName=PushFile}" Command="{Binding OpenFileCommand}" Width="80" Height="80" Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Rectangle Width="40" Height="40" Fill="DarkGray">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_folder_open}"></VisualBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                    <TextBox AllowDrop="True" Style="{StaticResource TextBoxOpenStyle}" TextWrapping="Wrap" Name="PushFile" Margin="5" Text="{Binding Path=ThreeTextCommandParameters.Text, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.ButtonCommand="{Binding OpenFileCommand}" metroControls:TextboxHelper.ButtonCommandParameter="{Binding ElementName=PushFile}"  metroControls:TextboxHelper.Watermark="ENTER OR CHOOSE FILE/S" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" />
                                    <TextBox  Name="PushLocation" Margin="5" Text="{Binding Path=ThreeTextCommandParameters.Text2, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER PUSH LOCATION" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                    <Button Margin="5" Name="PushButton" Command="{Binding PushCommand}" Style="{StaticResource PushButtonStyle}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ThreeTextCommandParametersConverter}">
                                                <Binding ElementName="Context"/>
                                                <Binding ElementName="PushFile" Path="Text"/>
                                                <Binding ElementName="PushLocation" Path="Text"/>
                                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                                <Binding ElementName="Target" Path="Text"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Button.Content>
                                            <DockPanel>
                                                <Rectangle Width="16" Height="16" Fill="{StaticResource WindowBackgroundBrush}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Visual="{StaticResource appbar_check}" Stretch="Fill"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <TextBlock Margin="5,0,0,0" Text="PUSH" />
                                            </DockPanel>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="PULL" Grid.Column="2">
                                <StackPanel>
                                    <Button Name="PullChoose" Command="{Binding SaveFileCommand}" CommandParameter="{Binding ElementName=PullLocation}" Width="80" Height="80" Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Rectangle Width="40" Height="40" Fill="DarkGray">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_save}"></VisualBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>

                                    <TextBox Style="{StaticResource TextBoxOpenStyle}" TextWrapping="Wrap" Name="PullLocation" Margin="5" Text="{Binding Path=FiveTextCommandParameters.Text, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.ButtonCommand="{Binding SaveFileCommand}" metroControls:TextboxHelper.ButtonCommandParameter="{Binding ElementName=PullLocation}"  metroControls:TextboxHelper.Watermark="ENTER OR CHOOSE LOCATION" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" />
                                    <TextBox TextWrapping="Wrap" Name="PullFile1" Margin="5" Text="{Binding Path=FiveTextCommandParameters.Text2, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"  metroControls:TextboxHelper.Watermark="PULL FILE 1 PATH" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"  metroControls:TextboxHelper.ClearTextButton="True"/>
                                    <Expander Header="PULL MORE FILES">
                                        <StackPanel>
                                            <TextBox Style="{StaticResource TextBoxStyle}" TextWrapping="Wrap" Name="PullFile2" Margin="5" Text="{Binding Path=FiveTextCommandParameters.Text3, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"   metroControls:TextboxHelper.Watermark="PULL FILE 2 PATH" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" metroControls:TextboxHelper.ClearTextButton="True" />
                                            <TextBox Style="{StaticResource TextBoxStyle}" TextWrapping="Wrap" Name="PullFile3" Margin="5" Text="{Binding Path=FiveTextCommandParameters.Text4, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"   metroControls:TextboxHelper.Watermark="PULL FILE 3 PATH" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" metroControls:TextboxHelper.ClearTextButton="True" />
                                            <TextBox Style="{StaticResource TextBoxStyle}" TextWrapping="Wrap" Name="PullFile4" Margin="5" Text="{Binding Path=FiveTextCommandParameters.Text5, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"   metroControls:TextboxHelper.Watermark="PULL FILE 4 PATH" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" metroControls:TextboxHelper.ClearTextButton="True" />
                                        </StackPanel>
                                    </Expander>
                                    <Button Margin="5" Name="PullButton" Command="{Binding PullCommand}" Style="{StaticResource PullButtonStyle}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource FiveTextCommandParametersConverter}">
                                                <Binding ElementName="Context"/>
                                                <Binding ElementName="PullLocation" Path="Text"/>
                                                <Binding ElementName="PullFile1" Path="Text"/>
                                                <Binding ElementName="PullFile2" Path="Text"/>
                                                <Binding ElementName="PullFile3" Path="Text"/>
                                                <Binding ElementName="PullFile4" Path="Text"/>
                                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                                <Binding ElementName="Target" Path="Text"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Button.Content>
                                            <DockPanel>
                                                <Rectangle Width="16" Height="16" Fill="{StaticResource WindowBackgroundBrush}">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Visual="{StaticResource appbar_check}" Stretch="Fill"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <TextBlock Margin="5,0,0,0" Text="PULL" />
                                            </DockPanel>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </GroupBox>

                        </Grid>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Copy/Move/Delete">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.25*"/>
                            <ColumnDefinition Width="0.25*"/>
                            <ColumnDefinition Width="0.25*"/>
                            <ColumnDefinition Width="0.25*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle VerticalAlignment="Top" HorizontalAlignment="Center" Fill="Gray" Width="128" Height="128">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_cabinet_files}" Stretch="Fill"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <GroupBox Header="Copy" Grid.Column="1">
                            <StackPanel>
                                <TextBox Name="CopyFrom" Margin="5" Text="{Binding Path=CopyCommandParameters.Text, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER 'FROM' LOCATION" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                <TextBox Name="CopyTo" Margin="5" Text="{Binding Path=CopyCommandParameters.Text2, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER 'TO' LOCATION" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                <Button x:Name="CopyButton" Command="{Binding CopyCommand}" Width="80" Height="80" Style="{DynamicResource CopyButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ThreeTextCommandParametersConverter}">
                                            <Binding ElementName="Context"/>
                                            <Binding ElementName="CopyFrom" Path="Text"/>
                                            <Binding ElementName="CopyTo" Path="Text"/>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="Target" Path="Text"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Rectangle Width="40" Height="40" Fill="DarkGray">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Move" Grid.Column="2">
                            <StackPanel>
                                <TextBox Name="MoveFrom" Margin="5" Text="{Binding Path=MoveCommandParameters.Text, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER 'FROM' LOCATION" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                <TextBox Name="MoveTo" Margin="5" Text="{Binding Path=MoveCommandParameters.Text2, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER 'TO' LOCATION" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                <Button x:Name="MoveButton" Command="{Binding MoveCommand}" Width="80" Height="80" Style="{DynamicResource MoveButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource ThreeTextCommandParametersConverter}">
                                            <Binding ElementName="Context"/>
                                            <Binding ElementName="MoveFrom" Path="Text"/>
                                            <Binding ElementName="MoveTo" Path="Text"/>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="Target" Path="Text"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Rectangle Width="40" Height="40" Fill="DarkGray">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Delete" Grid.Column="3">
                            <StackPanel>
                                <TextBox Name="DeletePath" Margin="5" Text="{Binding Path=DeleteCommandParameters.Text, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER DELETE LOCATION" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                <Button x:Name="DeleteButton" Command="{Binding DeleteCommand}" Width="80" Height="80" Style="{DynamicResource DeleteButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource TwoCommandsParametersConverter}">
                                            <Binding ElementName="Context"/>
                                            <Binding ElementName="DeletePath" Path="Text"/>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="Target" Path="Text"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Rectangle Width="40" Height="40" Fill="DarkGray">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Install/Remove">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="0.4*"/>
                            <ColumnDefinition Width="0.4*"/>
                        </Grid.ColumnDefinitions>

                        <ScrollViewer Grid.Column="0" CanContentScroll="True">
                            <StackPanel>
                                <Rectangle Width="130" Height="150" HorizontalAlignment="Center" VerticalAlignment="Top"  Fill="{DynamicResource FlatButtonBackgroundBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_box}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <metroControls:Tile Name="ListApps" Command="{Binding ListAppsCommand}" Title="LIST PACKAGES">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource UIParametersConverter}">
                                            <Binding ElementName="Context"/>
                                            <Binding ElementName="Packages"/>
                                            <Binding ElementName="Target" Path="Text"></Binding>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="ListAppsFlyout"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Rectangle Width="80" Height="80" Fill="White">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list}"></VisualBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </metroControls:Tile>
                            </StackPanel>
                        </ScrollViewer>


                        <GroupBox Header="install" Grid.Column="1">
                            <StackPanel>
                                <metroControls:ToggleSwitch Name="InstallSystemApp" Header="System App" IsChecked="{Binding InstallTwoCommandParameters.Bool}"/>
                                <Button Name="InstallChoose" CommandParameter="{Binding ElementName=InstallApp}" Command="{Binding OpenAppCommand}"  Width="80" Height="80" Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Rectangle Width="40" Height="40" Fill="{StaticResource FlatButtonBackgroundBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_folder_open}"></VisualBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                                <TextBox TextWrapping="Wrap" Name="InstallApp" Margin="5" Text="{Binding Path=InstallTwoCommandParameters.Text, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.ButtonCommand="{Binding OpenAppCommand}"  metroControls:TextboxHelper.ButtonCommandParameter="{Binding ElementName=InstallApp}"  metroControls:TextboxHelper.Watermark="ENTER OR CHOOSE APP (.apk)" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" />
                                <Button Margin="5" Name="InstallButton" Command="{Binding InstallCommand}" Style="{StaticResource InstallButtonStyle}">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource TwoCommandsParametersConverter}">
                                            <Binding ElementName="Context"/>
                                            <Binding ElementName="InstallApp" Path="Text"/>
                                            <Binding ElementName="InstallSystemApp" Path="IsChecked"/>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="Target" Path="Text"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Button.Content>
                                        <DockPanel>
                                            <Rectangle Width="16" Height="16" Fill="{StaticResource WindowBackgroundBrush}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock Margin="5,0,0,0" Text="INSTALL" />
                                        </DockPanel>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="uninstall" Grid.Column="2">
                            <StackPanel>
                                <metroControls:ToggleSwitch Name="UninstallSystemApp" Header="System App" IsChecked="{Binding UninstallTwoCommandParameters.Bool}"/>
                                <TextBox TextWrapping="Wrap" Name="UninstallApp" Margin="5" Text="{Binding Path=UninstallTwoCommandParameters.Text, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.ButtonCommand="{Binding OpenAppCommand}"  metroControls:TextboxHelper.ButtonCommandParameter="{Binding ElementName=UninstallApp}"  metroControls:TextboxHelper.Watermark="ENTER THE APP NAME OR PATH" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" />
                                <Button Margin="5" Name="UninstallButton" Command="{Binding UninstallCommand}" Style="{StaticResource UninstallButtonStyle}">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource TwoCommandsParametersConverter}">
                                            <Binding ElementName="Context"/>
                                            <Binding ElementName="UnistallApp" Path="Text"/>
                                            <Binding ElementName="UninstallSystemApp" Path="IsChecked"/>
                                            <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                            <Binding ElementName="Target" Path="Text"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Button.Content>
                                        <DockPanel>
                                            <Rectangle Width="16" Height="16" Fill="{StaticResource WindowBackgroundBrush}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_delete}" Stretch="Fill"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <TextBlock Margin="5,0,0,0" Text="UNINSTALL" />
                                        </DockPanel>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Sideload">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.25*"/>
                            <ColumnDefinition Width="0.75*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Margin="5" Width="130" Height="150" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="DarkGray" Grid.Column="0">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_download}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <GroupBox Grid.Column="1" Header="Sideload">
                            <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto">
                                <Grid>
                                    <StackPanel>
                                        <DockPanel HorizontalAlignment="Center">
                                            <metroControls:Tile Command="{Binding OpenZipCommand}" CommandParameter="{Binding ElementName=SideloadFile}" Title="CHOOSE" Width="180" Height="180" >
                                                <Rectangle Width="120" Height="120" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="White">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_folder_open}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </metroControls:Tile>
                                            <metroControls:Tile Title="SIDELOAD" Width="180" Height="180" Name="SideloadTile" Command="{Binding SideloadCommand}" VerticalAlignment="Center" HorizontalAlignment="Left">
                                                <Button.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource TwoCommandsParametersConverter}">
                                                        <Binding ElementName="Context"/>
                                                        <Binding ElementName="SideloadFile" Path="Text"/>
                                                        <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                                        <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                                        <Binding ElementName="Target" Path="Text"/>
                                                    </MultiBinding>
                                                </Button.CommandParameter>
                                                <Rectangle Width="120" Height="120" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="White">
                                                    <Rectangle.OpacityMask>
                                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_sd}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </metroControls:Tile>
                                        </DockPanel>
                                        <TextBox HorizontalAlignment="Center" Style="{StaticResource TextBoxOpenStyle}" TextWrapping="Wrap" x:Name="SideloadFile" Text="{Binding SideloadParameters.Text, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" metroControls:TextboxHelper.ButtonCommand="{Binding OpenZipCommand}"  metroControls:TextboxHelper.ButtonCommandParameter="{Binding ElementName=SideloadFile}"  metroControls:TextboxHelper.Watermark="ENTER OR CHOOSE SIDELOAD FILE" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}" Height="40" Margin="160,0" />
                                    </StackPanel>
                                </Grid>
                            </ScrollViewer>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Logcat">
                    <ScrollViewer>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.35*"/>
                                <ColumnDefinition Width="0.65*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="200" Height="200" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="DarkGray">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_barcode}"></VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <GroupBox Grid.Column="1" Header="logcat">
                                <DockPanel>
                                    <metroControls:Tile DockPanel.Dock="Left" Command="{Binding LogcatCommand}" Title="LOGCAT" Width="180" Height="180" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource UIParametersConverter}">
                                                <Binding ElementName="Context"/>
                                                <Binding ElementName="LogcatText"/>
                                                <Binding ElementName="Target" Path="Text"></Binding>
                                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                                <Binding ElementName="ListAppsFlyout"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Rectangle Width="120" Height="120" HorizontalAlignment="Center" VerticalAlignment="Top" Fill="White">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_magnify}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </metroControls:Tile>
                                    <TextBox Name="LogcatText" DockPanel.Dock="Right"/>
                                </DockPanel>
                            </GroupBox>
                        </Grid>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Execute">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.35*"/>
                            <ColumnDefinition Width="0.65*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <Rectangle Width="130" Height="150" HorizontalAlignment="Center" VerticalAlignment="Top"  Fill="DarkGray">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_list}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </StackPanel>
                        <GroupBox Header="Execute" Grid.Column="1">
                            <ScrollViewer>
                                <StackPanel>
                                    <DockPanel>
                                        <StackPanel Margin="5" >
                                            <TextBox Name="Command1" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command2" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text2, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command3" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text3, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command4" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text4, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command5" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text5, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                        </StackPanel>
                                        <StackPanel Margin="5">
                                            <TextBox Name="Command6" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text6, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command7" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text7, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command8" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text8, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command9" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text9, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                            <TextBox Name="Command10" Margin="5" Text="{Binding Path=ExecuteCommandsParameters.Text10, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER THE COMMAND TEXT" metroControls:TextboxHelper.ClearTextButton="True" metroControls:TextboxHelper.FocusBorderBrush="{DynamicResource AccentColorBrush}"/>
                                        </StackPanel>
                                    </DockPanel>
                                    <metroControls:Tile Command="{Binding ExecuteCommands}" Style="{StaticResource ExecuteButtonStyle}">
                                        <metroControls:Tile.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ExecuteCommandParametersConverter}">
                                                <Binding ElementName="Context"/>
                                                <Binding ElementName="Command1" Path="Text"/>
                                                <Binding ElementName="Command2" Path="Text"/>
                                                <Binding ElementName="Command3" Path="Text"/>
                                                <Binding ElementName="Command4" Path="Text"/>
                                                <Binding ElementName="Command5" Path="Text"/>
                                                <Binding ElementName="Command6" Path="Text"/>
                                                <Binding ElementName="Command7" Path="Text"/>
                                                <Binding ElementName="Command8" Path="Text"/>
                                                <Binding ElementName="Command9" Path="Text"/>
                                                <Binding ElementName="Command10" Path="Text"/>
                                                <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                                <Binding ElementName="Target" Path="Text"/>
                                            </MultiBinding>
                                        </metroControls:Tile.CommandParameter>
                                        <Rectangle Width="80" Height="80" HorizontalAlignment="Center" VerticalAlignment="Top"  Fill="White">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </metroControls:Tile>
                                </StackPanel>
                            </ScrollViewer>
                        </GroupBox>


                    </Grid>
                </TabItem>
            </TabControl>
            <ScrollViewer Name="RightTop" Background="{StaticResource FlyoutBackgroundBrush}" Grid.Column="1" Grid.Row="0" CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <TabControl>
                    <TabItem Header="device">
                        <DockPanel>
                            <Rectangle Width="32" Height="40" Fill="{StaticResource FlatButtonBackgroundBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_iphone}"></VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Button Name="ShowDevices" Command="{Binding ListDevicesCommand}" Width="{Binding}" Height="40" Margin="5,10,7,10" Style="{StaticResource FlatMetroAccentButton}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource UIParametersConverter}">
                                        <Binding ElementName="Context"/>
                                        <Binding ElementName="ADBDevices"/>
                                        <Binding ElementName="Target" Path="Text"/>
                                        <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                        <Binding ElementName="ListAppsFlyout"/>
                                    </MultiBinding>
                                </Button.CommandParameter>
                                <Button.Content>
                                    <DockPanel>
                                        <Rectangle Width="16" Height="16" Fill="White">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Visual="{StaticResource appbar_list}" Stretch="Fill"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </DockPanel>
                                </Button.Content>
                            </Button>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="tools">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="0.25*"/>
                            </Grid.ColumnDefinitions>
                            <Button Name="ShowReboot" Width="64" Height="64" Grid.Column="0" Style="{StaticResource MetroCircleButtonStyle}">
                                <Rectangle Width="32" Height="32" Fill="{StaticResource FlatButtonBackgroundBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_reset}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                            <Button Width="64" Height="64" Grid.Column="1" Style="{StaticResource MetroCircleButtonStyle}">
                                <Rectangle Width="32" Height="32" Fill="{StaticResource FlatButtonBackgroundBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_database}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                            <Button Name="ShowSettings" Width="64" Height="64" Grid.Column="3" Style="{StaticResource MetroCircleButtonStyle}">
                                <Rectangle Width="32" Height="32" Fill="{StaticResource FlatButtonBackgroundBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                            <Button Width="64" Height="64" Grid.Column="2" Style="{StaticResource MetroCircleButtonStyle}">
                                <Rectangle Width="32" Height="32" Fill="{StaticResource FlatButtonBackgroundBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_radar}"></VisualBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                        </Grid>
                    </TabItem>
                </TabControl>
            </ScrollViewer>

            <Grid Name="Right" Background="{StaticResource FlyoutBackgroundBrush}"  Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" >
                <Expander Header="Immediate" Margin="10,0,10,30" >
                    <Grid>
                        <Grid Margin="20">
                            <DockPanel VerticalAlignment="Top">
                                <metroControls:ProgressRing Width="40" Height="40" IsEnabled="True" Foreground="{DynamicResource AccentColorBrush}" IsActive="True"/>
                                <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="IMMEDIATE" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            </DockPanel>
                            <TextBox Margin="0,50,0,0" VerticalAlignment="Top" x:Name="ExecuteCmd" Height="20" Text="{Binding Path=ExecuteSingleCommandParameters.Text, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" metroControls:TextboxHelper.Watermark="ENTER COMMAND" Style="{DynamicResource ExecuteCommandTextBox}" metroControls:TextboxHelper.ButtonCommand="{Binding ExecuteSingleCommand}">
                                <metroControls:TextboxHelper.ButtonCommandParameter>
                                    <MultiBinding Converter="{StaticResource TwoCommandsParametersConverter}">
                                        <Binding ElementName="Context"/>
                                        <Binding ElementName="ExecuteCmd" Path="Text"/>
                                        <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                        <Binding ElementName="CreateNoWindow" Path="IsChecked"/>
                                        <Binding ElementName="Target" Path="Text"/>
                                    </MultiBinding>
                                </metroControls:TextboxHelper.ButtonCommandParameter>
                            </TextBox>
                            <Button Margin="0,80,0,0" Command="{Binding ClearImmediateCommand}" CommandParameter="{Binding ElementName=Context}" VerticalAlignment="Top"   Style="{StaticResource MetroFlatButton}">
                                <Button.Content>
                                    <DockPanel>
                                        <Rectangle Width="16" Height="16" Fill="{StaticResource WindowBackgroundBrush}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Visual="{StaticResource appbar_delete}" Stretch="Fill"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Margin="5,0,0,0" Text="CLEAR" />
                                    </DockPanel>
                                </Button.Content>
                            </Button>
                            <ScrollViewer Margin="0,115,0,0" CanContentScroll="True">
                                <TextBlock Style="{StaticResource ImmediateTextBlockStyle}" TextAlignment="Left" TextWrapping="Wrap" Foreground="White" x:Name="Context"/>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </Expander>
            </Grid>
            <DockPanel Name="Footer1" Grid.Column="0" Grid.Row="2">
                <Rectangle Fill="{DynamicResource AccentColorBrush}" Width="20" Height="20" Margin="5,0,0,0">
                    <Rectangle.OpacityMask>
                        <VisualBrush Visual="{StaticResource appbar_box}"></VisualBrush>
                    </Rectangle.OpacityMask>
                </Rectangle>
                <TextBlock Margin="10,0,0,0" Style="{StaticResource FooterTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Gabrijel Boduljak"/>

            </DockPanel>
            <DockPanel Name="Footer2" Grid.Column="1" Grid.Row="2">
                <Button Height="22" Width="100" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Button.Content>
                        <Rectangle Fill="Gray" Width="12" Height="12" Margin="5,0,0,0">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_question}"></VisualBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button.Content>
                </Button>
                <Label Name="StatusLabel" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource StatusLabel}" Width="150" MinHeight="22"/>
            </DockPanel>
        </Grid>
    </metroControls:MetroContentControl>

</metroControls:MetroWindow>
